{% include 'header' %}

import Foundation
import UDF

struct SignUpForm: Reducible {
    var email: String = ""
    var password: String = ""
    var name: String = ""
    var isSuccessPresented: Bool = false
    var alert: AlertBuilder.AlertStatus = .dismissed
    
    var isEnabledSignUp: Bool {
        EmailValidator().validate(email) && PasswordValidator().validate(password) && !BlankValidator().validate(name)
    }

    mutating func reduce(_ action: AnyAction) {
        switch action.value {
        case let action as Actions.UpdateFormField<Self, String>:
            self[keyPath: action.keyPath] = action.value
            
        case is Actions.UserSignedUp:
            email = ""
            password = ""
            name = ""
            isSuccessPresented = true
            
        case let action as Actions.Error where action.id == AuthFlow.signUpId:
            alert = .init(error: action.error)
            
        default:
            break
        }
    }
}
