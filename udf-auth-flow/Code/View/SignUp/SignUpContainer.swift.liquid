{% include 'header' %}

import SwiftUI
import UDF
import SwiftUI_Kit

struct SignUpContainer: Container {
    typealias ContainerComponent = SignUpComponent
    
    @Environment(\.presentationMode) var presentationMode

    func map(state: AppState, store: EnvironmentStore<AppState>) -> ContainerComponent.Props {
        .init(
            email: Binding(form: state.signUpForm.email, keyPath: \SignUpForm.email, store: store),
            password: Binding(form: state.signUpForm.password, keyPath: \SignUpForm.password, store: store),
            name: Binding(form: state.signUpForm.name, keyPath: \SignUpForm.name, store: store),
            isEnabled: state.signUpForm.isEnabledSignUp,
            isLoaderPresented: Binding(value: state.authFlow == .signUp ),
            signUpAction: store.bind(Actions.SignUp()),
            signUpAppleAction: {},
            loginAction: presentationMode.dismissAction(),
            isSuccessPresented: Binding(
                get: { state.signUpForm.isSuccessPresented },
                set: { _ in store.dispatch(Actions.UserSignedUp()) }
            ),
            successAction: presentationMode.dismissAction(),
            alertStatus: Binding(   
                get: { store.state.signUpForm.alert },
                set: { store.dispatch(Actions.UpdateAlertStatus(status: $0, id: AuthFlow.signUpId)) }
            )
        )
    }
}
