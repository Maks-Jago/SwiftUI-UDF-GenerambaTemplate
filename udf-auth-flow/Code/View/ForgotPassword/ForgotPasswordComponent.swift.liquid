{% include 'header' %}

import SwiftUI
import SwiftUI_UDF

struct ForgotPasswordComponent: Component {
    struct Props {
        var email: Binding<String>
        var isEnabled: Bool
        var isLoaderPresented: Binding<Bool>
        var forgotAction: Command
        var finishAction: Command
        var isFinished: Bool
        var error: Binding<String?>
    }
    
    var props: Props
    
    @State private var isFinished: Bool = false
    
    var body: some View {
        if isFinished != props.isFinished {
            DispatchQueue.main.async {
                withAnimation {
                    self.isFinished = self.props.isFinished
                }
            }
        }
        
        return NavigationView {
            VStack {
                if !isFinished {
                    TextField("email", text: props.email)
                    
                    Button(action: props.forgotAction) {
                        Text(String.localized().signIn.next)
                    }
                    .buttonStyle(AuthButtonStyle(isEnabled: props.isEnabled))
                    .disabled(!props.isEnabled)
                    .padding(.top, 22)
                    .errorAlert(error: props.error)
                } else {
                    
                    Button(action: self.props.finishAction) {
                        Text("Success Check email")
                    }
                    
                }
            }
        }
        .loaderSheet(isPresented: props.isLoaderPresented)
        .hideKeyboardByTap()
    }
}

struct ForgotPasswordComponent_Previews: PreviewProvider {
    static var previews: some View {
        ForgotPasswordComponent(
            props: .init(
                email: .constant(""),
                isEnabled: true,
                isLoaderPresented: .constant(false),
                forgotAction: {},
                finishAction: {},
                isFinished: false,
                error: .constant(nil)
            )
        )
    }
}
