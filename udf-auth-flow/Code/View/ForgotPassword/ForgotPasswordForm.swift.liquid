{% include 'header' %}

import Foundation
import SwiftUI_UDF

struct ForgotPasswordForm: Reducible {
    var email: String = ""
    var isFinished: Bool = false
    var error: String? = nil   
    
    mutating func reduce(_ action: AnyAction) {
        switch action.value {
        case let action as AnyAction.UpdateForgotPasswordIsFinished:
            email = ""
            isFinished = action.finished
            
        case let action as AnyAction.UpdateEmail<Id> where action.id == Self.id:
            email = action.email
            
        case let action as AnyAction.Error where action.id == ForgotPasswordForm.id:
            error = action.error
            
        default:
            break
        }
    }
}

// MARK: - Selectors
extension ForgotPasswordForm {
    var isEmailValid: Bool {
        EmailValidator().validate(email)
    }
}

// MARK: - Id
extension ForgotPasswordForm {
    struct Id: Hashable {
        var value: String
    }
    
    static var id: Id = Id(value: "ForgotPasswordForm")
}

