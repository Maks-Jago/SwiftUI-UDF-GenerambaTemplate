{% include 'header' %}

import XCTest
import SwiftUI_UDF
@testable import {{ module_info.test_target }}

final class {{ module_info.name }}FlowTests: XCTestCase {
    struct AppState: AppReducer & Equatable {
        var {{ module_info.name | downcase }}Flow = {{ module_info.name }}Flow()
    }

    var store: XCTestStore<AppState>!

    override func setUpWithError() throws {
        store = .init(initial: AppState())
        // Put setup code here. This method is called before the invocation of each test method in the class.
    }

    override func tearDownWithError() throws {
        // Put teardown code here. This method is called after the invocation of each test method in the class.
    }

    /*
    func test_WhenErrorOccurred_ShouldBeInNoneCase() {
        store.dispatch(Actions.Error(error: "Some error occurred", id: {{ module_info.name }}Flow.id))        
        XCTAssertEqual(store.state.{{ module_info.name | downcase }}Flow, .none)
    }
    */
}